#!/usr/bin/env bash
# vim: ft=sh

set -euo pipefail

mkdir -p ~/.tmp

export TMPDIR=~/.tmp

export AUTOUPDATE_USER="nmattia-autoupdate"
export AUTOUPDATE_EMAIL="nicolas@nmattia.com"
export AUTOUPDATE_NAME="Nicolas Mattia"
export REVIEW_USER="nmattia"

update_package() {
    dir=$(mktemp -d)

    echo "updating $1"

    cd $dir

    git clone "https://github.com/nmattia/$1"

    cd $1


    # The poor man's retry
    ./script/update 2>&1 > /dev/null || \
        ./script/update 2>&1 > /dev/null || \
        return 1

    if [[ `git status --porcelain` ]]; then

        date_tag=$(date --iso-8601)
        branch_name="autoupdate-$date_tag"
        git checkout -b "$branch_name"

        git config user.email "$AUTOUPDATE_EMAIL"
        git config user.name "$AUTOUPDATE_NAME"

        git commit --author="$AUTOUPDATE_NAME <$AUTOUPDATE_EMAIL>" -am "Update dependencies"

        hub fork >/dev/null 2>&1

        git remote set-url \
            "$AUTOUPDATE_USER" \
            "https://${GITHUB_TOKEN}@github.com/$AUTOUPDATE_USER/$1.git" \
            >/dev/null 2>&1

        git push -fu "$AUTOUPDATE_USER" "$branch_name" >/dev/null 2>&1

        hub pull-request \
            -m "Update dependencies" \
            >/dev/null 2>&1
    else
        echo "No updated for $1"
    fi
}

did_fail=""

update_package stutter || did_fail="stutter $did_fail"
update_package makefile || did_fail="makefile $did_fail"
update_package snack || did_fail="snack $did_fail"
update_package snipcheck || did_fail="snipcheck $did_fail"
update_package nmattia.com || did_fail="nmattia.com $did_fail"
update_package resume || did_fail="resume $did_fail"

if [ -n "$did_fail" ]; then
    echo "Failed: $did_fail"
    exit 1
fi
